# Generated by Django 4.2.6 on 2023-11-01 09:58

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import shortuuid.django_fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AdventureTour',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('image', models.ImageField(blank=True, upload_to='activity_images/')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('location', models.CharField(max_length=100)),
                ('duration_days', models.PositiveIntegerField()),
                ('itinerary', models.TextField(blank=True)),
                ('max_participants', models.PositiveIntegerField()),
                ('gear_provided', models.TextField(blank=True)),
                ('difficulty_level', models.CharField(max_length=50)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AdventureTourReservation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('contact_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('contact_phone', models.CharField(blank=True, max_length=20, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('confirmed', 'Confirmed'), ('cancelled', 'Cancelled')], default='pending', max_length=100)),
                ('reservation_date', models.DateField(default=datetime.date.today)),
                ('participant_count', models.PositiveIntegerField()),
                ('adventure_tour', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='travel.adventuretour')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Airline',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('code', models.CharField(max_length=3, unique=True)),
                ('name', models.CharField(max_length=200)),
                ('image', models.ImageField(blank=True, null=True, upload_to='airline_image/')),
            ],
        ),
        migrations.CreateModel(
            name='Airport',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('code', models.CharField(max_length=10, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('city', models.CharField(max_length=100)),
                ('country', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Bus',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('bus_number', models.CharField(max_length=20)),
                ('bus_type', models.CharField(max_length=20)),
                ('operator', models.CharField(max_length=50)),
                ('departure_station', models.CharField(max_length=100)),
                ('arrival_station', models.CharField(max_length=100)),
                ('departure_date', models.DateField()),
                ('departure_time', models.TimeField()),
                ('arrival_date', models.DateField()),
                ('arrival_time', models.TimeField()),
                ('duration', models.CharField(max_length=100)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('total_seats', models.PositiveIntegerField()),
                ('available_seats', models.PositiveIntegerField()),
                ('wifi_available', models.BooleanField(default=False)),
                ('power_outlets_available', models.BooleanField(default=False)),
                ('refreshments_served', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name_plural': 'Buses',
            },
        ),
        migrations.CreateModel(
            name='BusReservation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('passenger', models.IntegerField(default=0)),
                ('contact_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('contact_phone', models.CharField(blank=True, max_length=20, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('confirmed', 'Confirmed'), ('cancelled', 'Cancelled')], default='pending', max_length=100)),
                ('reservation_date', models.DateField(default=datetime.date.today)),
                ('departure_on', models.DateField()),
                ('bus', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='travel.bus')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Car',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('address', models.TextField()),
                ('country', models.CharField(max_length=50)),
                ('state', models.CharField(max_length=50)),
                ('city', models.CharField(max_length=50)),
                ('pin', models.CharField(max_length=10)),
                ('email', models.EmailField(max_length=254)),
                ('phone_number', models.CharField(max_length=20)),
                ('origin_city', models.CharField(default='', max_length=100)),
                ('destination_city', models.CharField(default='', max_length=100)),
                ('make', models.CharField(max_length=50)),
                ('model', models.CharField(max_length=50)),
                ('seats', models.PositiveIntegerField()),
                ('ac', models.BooleanField()),
                ('bags', models.BooleanField()),
                ('image', models.ImageField(upload_to='cars/')),
                ('price', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('tax_percent', models.DecimalField(decimal_places=2, max_digits=5)),
                ('tax_type', models.CharField(max_length=20)),
                ('total_cars', models.PositiveIntegerField()),
                ('available_cars', models.PositiveIntegerField()),
                ('available_till', models.DateField(default=datetime.date(2023, 11, 1))),
            ],
        ),
        migrations.CreateModel(
            name='CarReservation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('passenger', models.IntegerField(default=0)),
                ('contact_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('contact_phone', models.CharField(blank=True, max_length=20, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('confirmed', 'Confirmed'), ('cancelled', 'Cancelled')], default='pending', max_length=100)),
                ('reservation_date', models.DateField(default=datetime.date.today)),
                ('rental_start_date', models.DateField()),
                ('rental_end_date', models.DateField()),
                ('car', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='travel.car')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CarType',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('type', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='CityTour',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('image', models.ImageField(blank=True, upload_to='activity_images/')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('location', models.CharField(max_length=100)),
                ('duration_hours', models.PositiveIntegerField()),
                ('age_limit', models.PositiveIntegerField()),
                ('includes_meals', models.BooleanField(default=False)),
                ('schedule', models.TextField(blank=True)),
                ('special_requirements', models.TextField(blank=True)),
                ('max_participants', models.PositiveIntegerField()),
                ('equipment_provided', models.TextField(blank=True)),
                ('additional_info', models.TextField(blank=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ComboTour',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('image', models.ImageField(blank=True, upload_to='activity_images/')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('duration_days', models.PositiveIntegerField()),
                ('inclusion_details', models.TextField()),
                ('reservation_instructions', models.TextField()),
                ('discount_percentage', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('adventure_tour', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='travel.adventuretour')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ComboTourReservation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('contact_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('contact_phone', models.CharField(blank=True, max_length=20, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('confirmed', 'Confirmed'), ('cancelled', 'Cancelled')], default='pending', max_length=100)),
                ('reservation_date', models.DateField(default=datetime.date.today)),
                ('participant_count', models.PositiveIntegerField()),
                ('combo_tour', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='travel.combotour')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=255)),
                ('phone_number', models.CharField(max_length=15)),
                ('message', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='DesertSafari',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('image', models.ImageField(blank=True, upload_to='activity_images/')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('location', models.CharField(max_length=100)),
                ('duration_hours', models.PositiveIntegerField(blank=True, null=True)),
                ('schedule', models.TextField(blank=True)),
                ('inclusions', models.TextField(blank=True)),
                ('max_participants', models.PositiveIntegerField()),
                ('equipment_provided', models.TextField(blank=True)),
                ('safety_guidelines', models.TextField(blank=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DesertSafariReservation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('contact_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('contact_phone', models.CharField(blank=True, max_length=20, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('confirmed', 'Confirmed'), ('cancelled', 'Cancelled')], default='pending', max_length=100)),
                ('reservation_date', models.DateField(default=datetime.date.today)),
                ('participant_count', models.PositiveIntegerField()),
                ('desert_safari', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='travel.desertsafari')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DubaiActivity',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('image', models.ImageField(blank=True, upload_to='activity_images/')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('location', models.CharField(max_length=100)),
                ('duration_hours', models.PositiveIntegerField()),
                ('age_limit', models.PositiveIntegerField()),
                ('includes_meals', models.BooleanField(default=False)),
                ('schedule', models.TextField(blank=True)),
                ('special_requirements', models.TextField(blank=True)),
                ('max_participants', models.PositiveIntegerField()),
                ('equipment_provided', models.TextField(blank=True)),
                ('additional_info', models.TextField(blank=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DubaiActivityReservation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('contact_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('contact_phone', models.CharField(blank=True, max_length=20, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('confirmed', 'Confirmed'), ('cancelled', 'Cancelled')], default='pending', max_length=100)),
                ('reservation_date', models.DateField(default=datetime.date.today)),
                ('participant_count', models.PositiveIntegerField()),
                ('dubai_activity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='travel.dubaiactivity')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Flight',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('flight_number', models.CharField(max_length=10, unique=True)),
                ('name', models.CharField(default='', max_length=255)),
                ('departure_time', models.DateField()),
                ('arrival_time', models.DateField()),
                ('image', models.ImageField(default='', upload_to='flight_images/')),
                ('duration', models.CharField(max_length=100)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('total_seats', models.PositiveIntegerField()),
                ('available_seats', models.PositiveIntegerField()),
                ('in_flight_meal', models.BooleanField(default=False)),
                ('wifi_available', models.BooleanField(default=False)),
                ('entertainment', models.CharField(blank=True, max_length=100, null=True)),
                ('cabin_class', models.CharField(choices=[('Economy', 'Economy'), ('Business', 'Business'), ('First Class', 'First Class')], max_length=50)),
                ('layover_airport', models.CharField(blank=True, max_length=100, null=True)),
                ('layover_duration', models.DurationField(blank=True, null=True)),
                ('airline', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='travel.airline')),
            ],
        ),
        migrations.CreateModel(
            name='FlightReservation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('passenger', models.IntegerField(default=0)),
                ('contact_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('contact_phone', models.CharField(blank=True, max_length=20, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('confirmed', 'Confirmed'), ('cancelled', 'Cancelled')], default='pending', max_length=100)),
                ('reservation_date', models.DateField(default=datetime.date.today)),
                ('departure_on', models.DateField()),
                ('flight', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='travel.flight')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Forex',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(default='', max_length=100)),
                ('email', models.EmailField(default='', max_length=100)),
                ('location', models.CharField(max_length=100)),
                ('currency', models.CharField(max_length=100)),
                ('quantity', models.IntegerField()),
                ('purpose_of_visit', models.CharField(max_length=100)),
                ('booking_currency_for', models.CharField(max_length=100)),
                ('amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('action', models.CharField(choices=[('buy', 'Buy'), ('sell', 'Sell')], default='buy', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Hotel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(default='')),
                ('address', models.TextField()),
                ('country', models.CharField(max_length=50)),
                ('state', models.CharField(max_length=50)),
                ('city', models.CharField(max_length=50)),
                ('pin', models.CharField(max_length=10)),
                ('email', models.EmailField(max_length=254)),
                ('phone_number', models.CharField(max_length=20)),
                ('star_category', models.IntegerField(choices=[(5, '5 Star'), (4, '4 Star'), (3, '3 Star'), (2, '2 Star'), (1, '1 Star')])),
                ('tax_percent', models.DecimalField(decimal_places=2, max_digits=5)),
                ('tax_type', models.CharField(max_length=20)),
                ('image', models.ImageField(upload_to='hotels/')),
                ('price', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('total_rooms', models.PositiveIntegerField()),
                ('available_from', models.DateField(default=datetime.date(2023, 11, 1))),
                ('available_to', models.DateField(default=datetime.date(2023, 11, 1))),
                ('website', models.URLField(blank=True, null=True)),
                ('wifi_available', models.BooleanField(default=False)),
                ('parking_available', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='HotelReservation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('contact_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('contact_phone', models.CharField(blank=True, max_length=20, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('confirmed', 'Confirmed'), ('cancelled', 'Cancelled')], default='pending', max_length=100)),
                ('reservation_date', models.DateField(default=datetime.date.today)),
                ('total_guests', models.IntegerField(default=0)),
                ('check_in_date', models.DateField(blank=True)),
                ('check_out_date', models.DateField(blank=True)),
                ('hotel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='travel.hotel')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Package',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('image', models.ImageField(blank=True, upload_to='package_image/')),
                ('origin_city', models.CharField(max_length=100)),
                ('destination_city', models.CharField(max_length=100)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('category', models.CharField(choices=[('top attraction', 'Top Attraction'), ('desert safari', 'Desert Safari'), ('water park', 'Water Park'), ('theme park', 'Theme Park'), ('water activity', 'Water Activity'), ('adventure tour', 'Adventure Tour'), ('combo tour', 'Combo Tour')], default='', max_length=50)),
                ('activities', models.TextField()),
                ('duration', models.CharField(blank=True, max_length=100, null=True)),
                ('included_meals', models.CharField(blank=True, max_length=100, null=True)),
                ('departure', models.DateField(default=datetime.date(2023, 11, 1))),
                ('with_flights', models.BooleanField(default=False)),
                ('total_rooms', models.IntegerField(blank=True, null=True)),
                ('buses', models.ManyToManyField(blank=True, related_name='package_buses', to='travel.bus')),
                ('cars', models.ManyToManyField(blank=True, related_name='package_cars', to='travel.car')),
                ('flights', models.ManyToManyField(blank=True, related_name='package_flights', to='travel.flight')),
                ('hotels', models.ManyToManyField(blank=True, related_name='package_hotels', to='travel.hotel')),
            ],
        ),
        migrations.CreateModel(
            name='PackageReservation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('passenger', models.IntegerField(default=0)),
                ('contact_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('contact_phone', models.CharField(blank=True, max_length=20, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('confirmed', 'Confirmed'), ('cancelled', 'Cancelled')], default='pending', max_length=100)),
                ('reservation_date', models.DateField(default=datetime.date.today)),
                ('package', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='travel.package')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SelfDriveRental',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('make', models.CharField(blank=True, max_length=100, null=True)),
                ('model', models.CharField(blank=True, max_length=100, null=True)),
                ('year', models.IntegerField(blank=True, null=True)),
                ('image', models.ImageField(upload_to='self_drive_images/')),
                ('registration_number', models.CharField(blank=True, max_length=20, null=True, unique=True)),
                ('mileage', models.PositiveIntegerField(blank=True, null=True)),
                ('rate_per_day', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('is_available', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='ThemePark',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('image', models.ImageField(blank=True, upload_to='activity_images/')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('location', models.CharField(max_length=100)),
                ('opening_date', models.DateField()),
                ('website', models.URLField(blank=True)),
                ('contact_email', models.EmailField(blank=True, max_length=254)),
                ('contact_phone', models.CharField(blank=True, max_length=20)),
                ('capacity', models.PositiveIntegerField()),
                ('parking_available', models.BooleanField(default=True)),
                ('facilities', models.TextField(blank=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TopAttraction',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('image', models.ImageField(blank=True, upload_to='activity_images/')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('thrill_level', models.PositiveIntegerField()),
                ('age_limit', models.PositiveIntegerField()),
                ('opening_hours', models.CharField(max_length=100)),
                ('is_fast_pass_available', models.BooleanField(default=False)),
                ('theme_park', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='travel.themepark')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Visa',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(default='', max_length=100)),
                ('email', models.EmailField(default='', max_length=100)),
                ('country', models.CharField(max_length=100)),
                ('visa_type', models.CharField(max_length=100)),
                ('traveller', models.IntegerField(default=1)),
            ],
        ),
        migrations.CreateModel(
            name='WaterActivity',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('image', models.ImageField(blank=True, upload_to='activity_images/')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('age_limit', models.PositiveIntegerField()),
                ('duration_minutes', models.PositiveIntegerField()),
                ('equipment_required', models.TextField(blank=True)),
                ('skill_level', models.CharField(max_length=50)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='WaterPark',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('image', models.ImageField(blank=True, upload_to='activity_images/')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('location', models.CharField(max_length=100)),
                ('opening_date', models.DateField()),
                ('website', models.URLField(blank=True)),
                ('contact_email', models.EmailField(blank=True, max_length=254)),
                ('contact_phone', models.CharField(blank=True, max_length=20)),
                ('capacity', models.PositiveIntegerField()),
                ('parking_available', models.BooleanField(default=True)),
                ('facilities', models.TextField(blank=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Yacht',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('size', models.CharField(max_length=50)),
                ('capacity', models.PositiveIntegerField()),
                ('specifications', models.TextField(blank=True, null=True)),
                ('layout', models.TextField(blank=True, null=True)),
                ('crew_members', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('manufacturer', models.CharField(blank=True, max_length=100, null=True)),
                ('year_built', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('maximum_speed', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('fuel_capacity', models.PositiveIntegerField(blank=True, null=True)),
                ('cruising_range', models.CharField(blank=True, max_length=100, null=True)),
                ('cabins', models.PositiveSmallIntegerField(default=0)),
                ('bathrooms', models.PositiveSmallIntegerField(default=0)),
                ('engine_power', models.CharField(blank=True, max_length=100, null=True)),
                ('guest_capacity', models.PositiveSmallIntegerField(default=0)),
                ('exterior_features', models.TextField(blank=True, null=True)),
                ('interior_features', models.TextField(blank=True, null=True)),
                ('image', models.ImageField(upload_to='yacht_images/')),
                ('registration_country', models.CharField(blank=True, max_length=100, null=True)),
                ('hull_material', models.CharField(blank=True, max_length=100, null=True)),
                ('length_overall', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('draft', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('beam', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('owner', models.CharField(blank=True, max_length=100, null=True)),
                ('charter_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('description', models.TextField(blank=True, null=True)),
                ('amenities', models.TextField(blank=True, null=True)),
                ('special_features', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='YachtReservation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('passenger', models.IntegerField(default=0)),
                ('contact_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('contact_phone', models.CharField(blank=True, max_length=20, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('confirmed', 'Confirmed'), ('cancelled', 'Cancelled')], default='pending', max_length=100)),
                ('reservation_date', models.DateField(default=datetime.date.today)),
                ('check_in_date', models.DateField()),
                ('check_out_date', models.DateField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('yacht', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='travel.yacht')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='YachtImage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('image', models.ImageField(upload_to='yacht_images/')),
                ('yacht', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='travel.yacht')),
            ],
        ),
        migrations.CreateModel(
            name='YachtCustomerReview',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('review_text', models.TextField()),
                ('rating', models.PositiveSmallIntegerField()),
                ('review_date', models.DateField(auto_now_add=True)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('yacht', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='travel.yacht')),
            ],
        ),
        migrations.CreateModel(
            name='WaterParkReservation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('contact_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('contact_phone', models.CharField(blank=True, max_length=20, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('confirmed', 'Confirmed'), ('cancelled', 'Cancelled')], default='pending', max_length=100)),
                ('reservation_date', models.DateField(default=datetime.date.today)),
                ('admission_count', models.PositiveIntegerField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('water_park', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='travel.waterpark')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='WaterParkImage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('image', models.ImageField(upload_to='water_park_images/')),
                ('water_park', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='travel.waterpark')),
            ],
        ),
        migrations.CreateModel(
            name='WaterParkCustomerReview',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('review_text', models.TextField()),
                ('rating', models.PositiveSmallIntegerField()),
                ('review_date', models.DateField(auto_now_add=True)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('waterpark', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='travel.waterpark')),
            ],
        ),
        migrations.CreateModel(
            name='WaterActivityReservation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('contact_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('contact_phone', models.CharField(blank=True, max_length=20, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('confirmed', 'Confirmed'), ('cancelled', 'Cancelled')], default='pending', max_length=100)),
                ('reservation_date', models.DateField(default=datetime.date.today)),
                ('participant_count', models.PositiveIntegerField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('water_activity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='travel.wateractivity')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='WaterActivityImage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('image', models.ImageField(upload_to='water_activity_images/')),
                ('water_activity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='travel.wateractivity')),
            ],
        ),
        migrations.CreateModel(
            name='WaterActivityCustomerReview',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('review_text', models.TextField()),
                ('rating', models.PositiveSmallIntegerField()),
                ('review_date', models.DateField(auto_now_add=True)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('wateractivity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='travel.wateractivity')),
            ],
        ),
        migrations.AddField(
            model_name='wateractivity',
            name='water_park',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='travel.waterpark'),
        ),
        migrations.CreateModel(
            name='TopAttractionReservation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('contact_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('contact_phone', models.CharField(blank=True, max_length=20, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('confirmed', 'Confirmed'), ('cancelled', 'Cancelled')], default='pending', max_length=100)),
                ('reservation_date', models.DateField(default=datetime.date.today)),
                ('ticket_count', models.PositiveIntegerField()),
                ('top_attraction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='travel.topattraction')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TopAttractionImage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('image', models.ImageField(upload_to='top_attraction_images/')),
                ('top_attraction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='travel.topattraction')),
            ],
        ),
        migrations.CreateModel(
            name='TopAttractionCustomerReview',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('review_text', models.TextField()),
                ('rating', models.PositiveSmallIntegerField()),
                ('review_date', models.DateField(auto_now_add=True)),
                ('topattraction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='travel.topattraction')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ThemeParkReservation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('contact_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('contact_phone', models.CharField(blank=True, max_length=20, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('confirmed', 'Confirmed'), ('cancelled', 'Cancelled')], default='pending', max_length=100)),
                ('reservation_date', models.DateField(default=datetime.date.today)),
                ('admission_count', models.PositiveIntegerField()),
                ('theme_park', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='travel.themepark')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ThemeParkImage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('image', models.ImageField(upload_to='theme_park_images/')),
                ('theme_park', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='travel.themepark')),
            ],
        ),
        migrations.CreateModel(
            name='ThemeParkCustomerReview',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('review_text', models.TextField()),
                ('rating', models.PositiveSmallIntegerField()),
                ('review_date', models.DateField(auto_now_add=True)),
                ('themepark', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='travel.themepark')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SelfDriveRentalImage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('image', models.ImageField(upload_to='self_drive_images/')),
                ('self_drive', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='travel.selfdriverental')),
            ],
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('room_type', models.CharField(max_length=100)),
                ('capacity', models.IntegerField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('availability', models.BooleanField(default=True)),
                ('image', models.ImageField(upload_to='room_images/')),
                ('bed_type', models.CharField(max_length=50)),
                ('view', models.CharField(max_length=50)),
                ('available_rooms', models.IntegerField(default=1)),
                ('smoking_allowed', models.BooleanField(default=False)),
                ('pet_friendly', models.BooleanField(default=False)),
                ('hotel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rooms', to='travel.hotel')),
            ],
        ),
        migrations.CreateModel(
            name='RefundRequest',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('order_id', models.CharField(blank=True, max_length=100, null=True)),
                ('refund_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('cancelled', 'Cancelled'), ('refunded', 'Refunded')], default='pending', max_length=100)),
                ('request_date', models.DateTimeField(auto_now_add=True)),
                ('refund_date', models.DateField(blank=True, null=True)),
                ('adventure_tour', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='travel.adventuretourreservation')),
                ('bus', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='travel.busreservation')),
                ('car', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='travel.carreservation')),
                ('combo_tour', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='travel.combotourreservation')),
                ('desert_safari', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='travel.desertsafarireservation')),
                ('dubai_activity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='travel.dubaiactivityreservation')),
                ('flight', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='travel.flightreservation')),
                ('hotel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='travel.hotelreservation')),
                ('package', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='travel.packagereservation')),
                ('theme_park', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='travel.themeparkreservation')),
                ('top_attraction', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='travel.topattractionreservation')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('water_activity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='travel.wateractivityreservation')),
                ('water_park', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='travel.waterparkreservation')),
                ('yacht', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='travel.yachtreservation')),
            ],
        ),
        migrations.CreateModel(
            name='PackageCustomerReview',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('review_text', models.TextField()),
                ('rating', models.PositiveSmallIntegerField()),
                ('review_date', models.DateField(auto_now_add=True)),
                ('package', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='travel.package')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Offer',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(default='', max_length=100)),
                ('code', models.CharField(max_length=20, unique=True)),
                ('image', models.ImageField(upload_to='offer_images/')),
                ('description', models.TextField()),
                ('discount_percent', models.DecimalField(decimal_places=2, max_digits=5)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('buses', models.ManyToManyField(blank=True, related_name='offer_buses', to='travel.bus')),
                ('cars', models.ManyToManyField(blank=True, related_name='offer_cars', to='travel.car')),
                ('flights', models.ManyToManyField(blank=True, related_name='offer_flights', to='travel.flight')),
                ('hotels', models.ManyToManyField(blank=True, related_name='offer_hotels', to='travel.hotel')),
                ('packages', models.ManyToManyField(blank=True, related_name='offer_packages', to='travel.package')),
            ],
        ),
        migrations.AddField(
            model_name='hotelreservation',
            name='room',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='travel.room'),
        ),
        migrations.AddField(
            model_name='hotelreservation',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='HotelImage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('image', models.ImageField(upload_to='hotel_images/')),
                ('hotel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='travel.hotel')),
            ],
        ),
        migrations.CreateModel(
            name='HotelCustomerReview',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('review_text', models.TextField()),
                ('rating', models.PositiveSmallIntegerField()),
                ('review_date', models.DateField(auto_now_add=True)),
                ('hotel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='travel.hotel')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='HotelAmenity',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50, unique=True)),
                ('description', models.TextField()),
                ('additional_cost', models.DecimalField(decimal_places=2, max_digits=10)),
                ('rooms', models.ManyToManyField(blank=True, to='travel.room')),
            ],
            options={
                'verbose_name_plural': 'Hotel Amenities',
            },
        ),
        migrations.AddField(
            model_name='hotel',
            name='amenities',
            field=models.ManyToManyField(related_name='hotels', to='travel.hotelamenity'),
        ),
        migrations.CreateModel(
            name='FlightCustomerReview',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('review_text', models.TextField()),
                ('rating', models.PositiveSmallIntegerField()),
                ('review_date', models.DateField(auto_now_add=True)),
                ('flight', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='travel.flight')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FlightAmenity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('description', models.TextField()),
                ('additional_cost', models.DecimalField(decimal_places=2, max_digits=10)),
                ('inflight_wifi', models.BooleanField(default=False)),
                ('priority_boarding', models.BooleanField(default=False)),
                ('lounge_access', models.BooleanField(default=False)),
                ('flights', models.ManyToManyField(blank=True, to='travel.flight')),
            ],
        ),
        migrations.AddField(
            model_name='flight',
            name='amenities',
            field=models.ManyToManyField(blank=True, to='travel.flightamenity'),
        ),
        migrations.AddField(
            model_name='flight',
            name='arrival_airport',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='arrivals', to='travel.airport'),
        ),
        migrations.AddField(
            model_name='flight',
            name='departure_airport',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='departures', to='travel.airport'),
        ),
        migrations.CreateModel(
            name='DubaiActivityImage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('image', models.ImageField(upload_to='dubai_activity_images/')),
                ('dubai_activity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='travel.dubaiactivity')),
            ],
        ),
        migrations.CreateModel(
            name='DubaiActivityCustomerReview',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('review_text', models.TextField()),
                ('rating', models.PositiveSmallIntegerField()),
                ('review_date', models.DateField(auto_now_add=True)),
                ('dubaiactivity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='travel.dubaiactivity')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='DesertSafariImage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('image', models.ImageField(upload_to='desert_safari_images/')),
                ('desert_safari', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='travel.desertsafari')),
            ],
        ),
        migrations.CreateModel(
            name='DesertSafariCustomerReview',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('review_text', models.TextField()),
                ('rating', models.PositiveSmallIntegerField()),
                ('review_date', models.DateField(auto_now_add=True)),
                ('desertsafari', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='travel.desertsafari')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ComboTourImage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('image', models.ImageField(upload_to='combo_tour_images/')),
                ('combo_tour', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='travel.combotour')),
            ],
        ),
        migrations.CreateModel(
            name='ComboTourCustomerReview',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('review_text', models.TextField()),
                ('rating', models.PositiveSmallIntegerField()),
                ('review_date', models.DateField(auto_now_add=True)),
                ('combotour', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='travel.combotour')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='combotour',
            name='desert_safari',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='travel.desertsafari'),
        ),
        migrations.AddField(
            model_name='combotour',
            name='theme_park',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='travel.themepark'),
        ),
        migrations.AddField(
            model_name='combotour',
            name='water_park',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='travel.waterpark'),
        ),
        migrations.CreateModel(
            name='CityTourImage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('image', models.ImageField(upload_to='city_tour_images/')),
                ('city_tour', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='travel.citytour')),
            ],
        ),
        migrations.CreateModel(
            name='CarImage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('image', models.ImageField(upload_to='car_images/')),
                ('car', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='travel.car')),
            ],
        ),
        migrations.CreateModel(
            name='CarCustomerReview',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('review_text', models.TextField()),
                ('rating', models.PositiveSmallIntegerField()),
                ('review_date', models.DateField(auto_now_add=True)),
                ('car', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='travel.car')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='car',
            name='car_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='travel.cartype'),
        ),
        migrations.CreateModel(
            name='BusAmenity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('description', models.TextField()),
                ('additional_cost', models.DecimalField(decimal_places=2, max_digits=10)),
                ('onboard_entertainment', models.BooleanField(default=False)),
                ('reclining_seats', models.BooleanField(default=False)),
                ('restroom_onboard', models.BooleanField(default=False)),
                ('buses', models.ManyToManyField(blank=True, to='travel.bus')),
            ],
        ),
        migrations.AddField(
            model_name='bus',
            name='amenities',
            field=models.ManyToManyField(blank=True, to='travel.busamenity'),
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', shortuuid.django_fields.ShortUUIDField(alphabet='0123456789', length=8, max_length=10, prefix='', primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('confirmed', 'Confirmed'), ('cancelled', 'Cancelled'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('order_id', models.CharField(blank=True, max_length=100, null=True)),
                ('payment_id', models.CharField(blank=True, max_length=100, null=True)),
                ('payment_status', models.CharField(choices=[('pending', 'Pending'), ('paid', 'Paid'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('payment_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('booking_date', models.DateTimeField(auto_now_add=True)),
                ('pdf', models.FileField(blank=True, null=True, upload_to='pdf/')),
                ('check_in_date', models.DateField(blank=True, null=True)),
                ('check_out_date', models.DateField(blank=True, null=True)),
                ('adventure_tour', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='travel.adventuretourreservation')),
                ('bus', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='travel.busreservation')),
                ('car', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='travel.carreservation')),
                ('combo_tour', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='travel.combotourreservation')),
                ('desert_safari', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='travel.desertsafarireservation')),
                ('dubai_activity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='travel.dubaiactivityreservation')),
                ('flight', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='travel.flightreservation')),
                ('hotel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='travel.hotelreservation')),
                ('package', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='travel.packagereservation')),
                ('theme_park', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='travel.themeparkreservation')),
                ('top_attraction', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='travel.topattractionreservation')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('water_activity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='travel.wateractivityreservation')),
                ('water_park', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='travel.waterparkreservation')),
                ('yacht', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='travel.yachtreservation')),
            ],
        ),
        migrations.CreateModel(
            name='Banner',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('image', models.ImageField(upload_to='banner_images/')),
                ('adventure_tour', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='travel.adventuretour')),
                ('combo_tour', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='travel.combotour')),
                ('desert_safari', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='travel.desertsafari')),
                ('dubai_activity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='travel.dubaiactivity')),
                ('theme_park', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='travel.themepark')),
                ('top_attraction', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='travel.topattraction')),
                ('water_activity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='travel.wateractivity')),
                ('water_park', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='travel.waterpark')),
            ],
        ),
        migrations.CreateModel(
            name='AdventureTourImage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('image', models.ImageField(upload_to='adventure_tour_images/')),
                ('adventure_tour', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='travel.adventuretour')),
            ],
        ),
        migrations.CreateModel(
            name='AdventureTourCustomerReview',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('review_text', models.TextField()),
                ('rating', models.PositiveSmallIntegerField()),
                ('review_date', models.DateField(auto_now_add=True)),
                ('adventuretour', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='travel.adventuretour')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
